/*
 * CPOO Server API
 * This is a prototype of CPOO Project's front/back API. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@mightycode.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import okhttp3.OkHttpClient;
import org.junit.jupiter.api.BeforeEach;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDTO;
import org.openapitools.client.model.MessageDTO;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessageApi
 */
@Disabled
public class MessageApiTest {

    private final MessageApi api = new MessageApi();
    private final AuthenticationApi authApi = new AuthenticationApi();
    @BeforeEach
    public void init() {

        // Simulate the behavior of a web browser by remembering cookies set by the server
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        OkHttpClient okHttpClient = builder.cookieJar(new MyCookieJar()).build();
        ApiClient apiClient = new ApiClient(okHttpClient);
        api.setApiClient(apiClient);
        authApi.setApiClient(apiClient);
    }

    /**
     * Delete a message already sent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userMessageMsgIDDeleteTest() throws ApiException {
        UUID msgID = null;
        api.userMessageMsgIDDelete(msgID);
        // TODO: test validations
    }

    /**
     * Modify a certain message already sent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userMessageMsgIDPatchTest() throws ApiException {
        UUID msgID = null;
        String body = null;
        MessageDTO response = api.userMessageMsgIDPatch(msgID, body);
        // TODO: test validations
    }

    /**
     * Send a new message to a given user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userMessageNewMessageRecipientPostTest() throws ApiException {
        String recipient = null;
        Object body = null;
        MessageDTO response = api.userMessageNewMessageRecipientPost(recipient, body);
        // TODO: test validations
    }

    /**
     * Retrieve all messages in a given conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userMessageUserIDMessagesGetTest() throws ApiException {
        String userID = null;
        List<MessageDTO> response = api.userMessageUserIDMessagesGet(userID);
        // TODO: test validations
    }

}
